{"version":3,"file":"static/js/716.aad8528d.chunk.js","mappings":"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","sources":["components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Contact.css';\n\nfunction Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [status, setStatus] = useState({\n    submitting: false,\n    submitted: false,\n    error: null\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus({ submitting: true, submitted: false, error: null });\n    \n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/contact`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      setStatus({ submitting: false, submitted: true, error: null });\n      setFormData({ name: '', email: '', subject: '', message: '' });\n      \n      // Show success message for 3 seconds\n      setTimeout(() => {\n        setStatus(prev => ({ ...prev, submitted: false }));\n      }, 3000);\n    } catch (error) {\n      setStatus({ submitting: false, submitted: false, error: error.message });\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <div className=\"contact-container\">\n      <div className=\"contact-hero\">\n        <div className=\"contact-overlay\"></div>\n        <h1 className=\"contact-title\">Contact Us</h1>\n      </div>\n\n      <div className=\"contact-content\">\n        <div className=\"contact-info\">\n          <div className=\"info-card\">\n            <div className=\"info-icon\">üìß</div>\n            <h3>Email</h3>\n            <p>contact@spacetech.blog</p>\n          </div>\n          <div className=\"info-card\">\n            <div className=\"info-icon\">üåç</div>\n            <h3>Social Media</h3>\n            <div className=\"social-links\">\n              <a href=\"https://twitter.com/spacetechblog\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>\n              <a href=\"https://linkedin.com/company/spacetechblog\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n            </div>\n          </div>\n          <div className=\"info-card\">\n            <div className=\"info-icon\">üìç</div>\n            <h3>Location</h3>\n            <p>Space Tech Innovation Hub</p>\n          </div>\n        </div>\n\n        {status.submitted && (\n          <div className=\"success-message\">\n            Thanks for your message! We'll get back to you soon.\n          </div>\n        )}\n        {status.error && (\n          <div className=\"error-message\">\n            {status.error}\n          </div>\n        )}\n        <form className=\"contact-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n              placeholder=\"Your name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n              placeholder=\"your.email@example.com\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"subject\">Subject</label>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              name=\"subject\"\n              value={formData.subject}\n              onChange={handleChange}\n              required\n              placeholder=\"What's this about?\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Message</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n              placeholder=\"Your message...\"\n              rows=\"6\"\n            ></textarea>\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">\n            Send Message\n            <span className=\"button-glow\"></span>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n"],"names":["formData","setFormData","useState","name","email","subject","message","status","setStatus","submitting","submitted","error","handleChange","e","target","value","_jsxs","className","children","_jsx","href","rel","onSubmit","async","preventDefault","fetch","method","headers","body","JSON","stringify","ok","Error","setTimeout","prev","htmlFor","type","id","onChange","required","placeholder","rows"],"sourceRoot":""}