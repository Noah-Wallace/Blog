{"version":3,"file":"static/js/248.cab572cf.chunk.js","mappings":"2JAsGA,QAlGA,WACE,MAAOA,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAC7CC,SAAU,GACVC,SAAU,MAELC,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GACjCO,GAAWC,EAAAA,EAAAA,MAiCXC,EAAgBC,IACpBX,EAAe,IACVD,EACH,CAACY,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,SAI9B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAEHb,IACCW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAC3Bb,KAILc,EAAAA,EAAAA,MAAA,QAAMC,SAjDSC,UACnBT,EAAEU,iBACFd,GAAW,GACXF,EAAS,MAET,IACE,MAAMiB,QAAiBC,MAAM,uDAA+C,CAC1EC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU7B,KAGvB,IAAKuB,EAASO,GAAI,CAChB,MAAMC,QAAaR,EAASS,OAC5B,MAAM,IAAIC,MAAMF,EAAK1B,OAAS,eAChC,CAEA,MAAM,MAAE6B,SAAgBX,EAASS,OACjCG,aAAaC,QAAQ,YAAaF,GAGlCzB,EAAS,SACX,CAAE,MAAO4B,GACP/B,EAAS+B,EAAIC,QACf,CAAC,QACC9B,GAAW,EACb,GAqBiCU,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,WAAUrB,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACEwB,KAAK,OACLC,GAAG,WACH3B,KAAK,WACLC,MAAOf,EAAYG,SACnBuC,SAAU/B,EACVgC,UAAQ,EACRC,aAAa,iBAIjBzB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,WAAUrB,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACEwB,KAAK,WACLC,GAAG,WACH3B,KAAK,WACLC,MAAOf,EAAYI,SACnBsC,SAAU/B,EACVgC,UAAQ,EACRC,aAAa,yBAIjB5B,EAAAA,EAAAA,KAAA,UACEwB,KAAK,SACLvB,UAAU,eACV4B,SAAUtC,EAAQW,SAEjBX,EAAU,gBAAkB,iBAMzC,C","sources":["components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nfunction Login() {\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Login failed');\n      }\n\n      const { token } = await response.json();\n      localStorage.setItem('authToken', token);\n      \n      // Redirect to admin dashboard\n      navigate('/admin');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <h1>Admin Login</h1>\n        \n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={credentials.username}\n              onChange={handleChange}\n              required\n              autoComplete=\"username\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={credentials.password}\n              onChange={handleChange}\n              required\n              autoComplete=\"current-password\"\n            />\n          </div>\n\n          <button \n            type=\"submit\" \n            className=\"login-button\"\n            disabled={loading}\n          >\n            {loading ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"names":["credentials","setCredentials","useState","username","password","error","setError","loading","setLoading","navigate","useNavigate","handleChange","e","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","Error","token","localStorage","setItem","err","message","htmlFor","type","id","onChange","required","autoComplete","disabled"],"sourceRoot":""}